users.select.by.id = select * from users where user_id=?
users.select.all = select * from users
users.select.all.speakers=select * from users where user_role="SPEAKER"
users.insert=insert into users (user_login, user_password, user_name_en_US, user_name_uk_UA, user_surname_en_US, user_surname_uk_UA, user_email, user_role) values (?,?,?,?,?,?,?,?)
users.select.by.login=select * from users where user_login=?
users.select.all.speakers.ids=select user_id from users where user_role="SPEAKER"

conferences.select.by.id=select * from conferences where conferences.conference_id=?
conferences.select.all=select * from conferences order by conference_datetime ASC
conferences.insert=insert into conferences (conference_name_en_US, conference_name_uk_UA, conference_datetime, conference_location_en_US, conference_location_uk_UA)  values (?,?,?,?,?)
conferences.delete=delete from conferences where conference_id=?
conferences.update =update conferences set conference_name_en_US=?, conference_name_uk_UA=?, conference_datetime=?, conference_location_en_US=?, conference_location_uk_UA=? where conference_id=?
conferences.select.all.past=select * from conferences where conference_datetime < now()
conferences.select.all.future=select * from conferences where conference_datetime >= now()
conferences.select.with.paginated=select * from(select * from conferences order by conference_datetime ASC limit ?, ?) as c
conferences.count=select count(conference_id) from conferences
conferences.count.past=select count(conference_id) from conferences where conference_datetime < now()
conferences.select.past.with.paginated=select * from(select * from conferences where conference_datetime < now() order by conference_datetime ASC limit ?, ?) as c
conferences.count.future=select count(conference_id) from conferences where conference_datetime >= now()
conferences.select.future.with.paginated=select * from(select * from conferences where conference_datetime >= now() order by conference_datetime ASC limit ?, ?) as c

reports.select.by.id=select * from reports where report_id=?
reports.delete.by.id=delete from reports where report_id=?
reports.add=insert into reports (report_theme_en_US, report_theme_uk_UA, report_datetime, speaker_id) VALUES (?,?,?,?)
reports.select.all=select * from reports order by report_datetime ASC
reports.select.all.linked.to.conference=select reports.report_id, report_theme_en_US, report_theme_uk_UA, report_datetime, speaker_id from reports join reports_conferences rc on reports.report_id = rc.report_id and rc.conference_id=?
reports.update=update reports set report_theme_en_US=?, report_theme_uk_UA=?, report_datetime=?, speaker_id=? where report_id=?
reports.select.by.speaker.id=select * from reports where speaker_id=?
reports.count=select count(report_id) from reports
reports.select.all.linked.to.conference.with.pagination=select reports.report_id, report_theme_en_US, report_theme_uk_UA, report_datetime, speaker_id from reports join reports_conferences rc on reports.report_id = rc.report_id and rc.conference_id=? order by report_datetime limit ?, ?
reports.count.linked.to.conference=select count(report_id) from reports_conferences where conference_id=?

reports.conferences.insert=insert into reports_conferences (report_id, conference_id) values (?,?)

users.conferences.select.conferences.ids=select conference_id from users_conferences where user_id=?
users.conferences.register.user.for.conference=insert into users_conferences (user_id, conference_id) values (?,?)
users.conferences.unregister.user.from.conference=delete from users_conferences where user_id=? and conference_id=?

reports.reports.conferences.select.speakers.ids.for.rating=select distinct speaker_id from reports where report_id in (select report_id from reports_conferences where conference_id in (
conferences.reports.conferences.select.report.count=select c.conference_id as conference_id, count(rc.report_id) as report_count from conferences as c join reports_conferences rc on c.conference_id = rc.conference_id group by c.conference_id
conferences.users.conferences.select.user.count=select c.conference_id as conference_id, count(uc.user_id) as user_count from conferences as c join users_conferences uc on c.conference_id = uc.conference_id group by c.conference_id
reports.reports.conferences.select.speakers.count=select count(*) as speaker_count from (select speaker_id from reports where report_id in (select report_id from reports_conferences where conference_id=?) group by speaker_id) as records

users.speakers.rating.select.rating=select speaker_id, avg(speaker_rating) as avg from users_speakers_rating group by speaker_id
users.speakers.rating.select.rating.by.user=select speaker_id, speaker_rating from users_speakers_rating where user_id=? group by speaker_id
users.speakers.rating.insert=insert into users_speakers_rating (user_id, speaker_id, speaker_rating, speaker_bonuses) values (?,?,?,?)
users.speakers.rating.delete=delete from users_speakers_rating where user_id=? and speaker_id=?
users.speakers.rating.check=select * from users_speakers_rating where user_id=? and speaker_id=?
users.speakers.rating.update=update users_speakers_rating set speaker_rating=?, speaker_bonuses=? where user_id=? and speaker_id=?
